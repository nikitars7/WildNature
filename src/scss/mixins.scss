@use 'sass:math';
$max-width: 1920;
$maxWidthContainer: 1570;
// adaptive-values 
@mixin adaptiv-value($property, $startSize, $minSize, $type, $endPoint:320) {
  $addSize: $startSize - $minSize;
  @if $type == 1 {
    // only if less than container width
    #{$property}: $startSize + px;
    @media(max-width: #{$maxWidthContainer +px}) {
      #{$property}: calc(
        #{$minSize +px} + #{$addSize} *
          ((100vw - #{$endPoint +px}) / #{$maxWidthContainer - $endPoint})
      );
    }
  } @else if $type == 2 {
    // only if bigger than container width
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidthContainer +px}) {
      #{$property}: calc(
        #{$minSize +px} + #{$addSize} * ((100vw - #{$endPoint +px}) / #{$max-width - $endPoint})
      );
    }
  } @else {
    //always
    #{$property}: calc(
      #{$minSize + px} + #{$addSize} * ((100vw - #{$endPoint +px}) / #{$max-width - $endPoint})
    );
  }
}
//Percent
@function percent($px,$from:100){
  $result: math.div($px,$from) * 100%;
  @return $result;
}
//REM 
@function toRem($px,$current:16){
  $result: math.div($px,$current) + rem;
  @return $result;
}
//EM
@function em($px,$current:16){
  $result: math.div($px,$current) + em;
  @return $result;
}
//Currency

@mixin currency($sym){
  &::after{
  content: "#{$sym}";
  }
}